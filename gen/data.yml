---
extra_includes:
- "wpiutil_converters.hpp"

# TODO: this makes compile times really long, but it's required because
# pybind11 needs complete types
- "networktables/NetworkTableInstance.h"

classes:
  NetworkTable:
    shared_ptr: true
    ignored_bases:
    - ITable
    methods:
      BasenameKey:
      NormalizeKey:
        overloads:
          wpi::Twine&, bool:
          wpi::Twine&, wpi::SmallVectorImpl<char>&, bool:
            ignore: true
      GetHierarchy:
      NetworkTable:
        ignore: true
      GetInstance:
      Initialize:
        ignore: true
      Shutdown:
        ignore: true
      SetClientMode:
        ignore: true
      SetServerMode:
        ignore: true
      SetTeam:
        ignore: true
      SetIPAddress:
        overloads:
          wpi::StringRef:
            ignore: true
          ArrayRef<std::string>:
            ignore: true
      SetPort:
        ignore: true
      SetDSClientEnabled:
        ignore: true
      SetPersistentFilename:
        ignore: true
      SetNetworkIdentity:
        ignore: true
      GlobalDeleteAll:
        ignore: true
      Flush:
        ignore: true
      SetUpdateRate:
        ignore: true
      SavePersistent:
        ignore: true
      LoadPersistent:
        ignore: true
      GetTable:
        ignore: true
      GetEntry:
      AddEntryListener:
        overloads:
          TableEntryListener, unsigned int [const]:
          wpi::Twine&, TableEntryListener, unsigned int [const]:
      RemoveEntryListener:
      AddSubTableListener:
        overloads:
          TableListener, bool:
          ITableListener*:
            ignore: true
          ITableListener*, bool:
            ignore: true
      RemoveTableListener:
        overloads:
          NT_EntryListener:
          ITableListener*:
            ignore: true
      AddTableListener:
        overloads:
          ITableListener*:
            ignore: true
          ITableListener*, bool:
            ignore: true
          wpi::StringRef, ITableListener*, bool:
            ignore: true
      AddTableListenerEx:
        overloads:
          ITableListener*, unsigned int:
            ignore: true
          wpi::StringRef, ITableListener*, unsigned int:
            ignore: true
      GetSubTable:
      ContainsKey:
      ContainsSubTable:
      GetKeys:
      GetSubTables:
      SetPersistent:
      ClearPersistent:
      IsPersistent:
      SetFlags:
      ClearFlags:
      GetFlags:
      Delete:
      PutNumber:
      SetDefaultNumber:
      GetNumber:
      PutString:
      SetDefaultString:
      GetString:
      PutBoolean:
      SetDefaultBoolean:
      GetBoolean:
      PutBooleanArray:
      SetDefaultBooleanArray:
      GetBooleanArray:
      PutNumberArray:
      SetDefaultNumberArray:
      GetNumberArray:
      PutStringArray:
      SetDefaultStringArray:
      GetStringArray:
      PutRaw:
      SetDefaultRaw:
      GetRaw:
      PutValue:
      SetDefaultValue:
      GetValue:
      GetPath:
      SaveEntries:
      LoadEntries:
  
  private_init:
    ignore: true

  NetworkTableEntry:
    shared_ptr: false
    methods:
      NetworkTableEntry:
        overloads:
          "":
          NT_Entry:
      GetHandle:
      GetInstance:
      Exists:
      GetName:
      GetType:
      GetFlags:
      GetLastChange:
      GetInfo:
      GetValue:
      GetBoolean:
      GetDouble:
      GetString:
      GetRaw:
      GetBooleanArray:
        overloads:
          ArrayRef<int> [const]:
          std::initializer_list<int> [const]:
            ignore: true
      GetDoubleArray:
        overloads:
          ArrayRef<double> [const]:
          std::initializer_list<double> [const]:
            ignore: true
      GetStringArray:
        overloads:
          ArrayRef<std::string> [const]:
          std::initializer_list<std::string> [const]:
            ignore: true
      SetDefaultValue:
      SetDefaultBoolean:
      SetDefaultDouble:
      SetDefaultString:
      SetDefaultRaw:
      SetDefaultBooleanArray:
        overloads:
          ArrayRef<int>:
          std::initializer_list<int>:
            ignore: true
      SetDefaultDoubleArray:
        overloads:
          ArrayRef<double>:
          std::initializer_list<double>:
            ignore: true
      SetDefaultStringArray:
        overloads:
          ArrayRef<std::string>:
          std::initializer_list<std::string>:
            ignore: true
      SetValue:
      SetBoolean:
      SetDouble:
      SetString:
      SetRaw:
      SetBooleanArray:
        overloads:
          ArrayRef<bool>:
          std::initializer_list<bool>:
            ignore: true
          ArrayRef<int>:
            ignore: true
          std::initializer_list<int>:
            ignore: true
      SetDoubleArray:
        overloads:
          ArrayRef<double>:
          std::initializer_list<double>:
            ignore: true
      SetStringArray:
        overloads:
          ArrayRef<std::string>:
          std::initializer_list<std::string>:
            ignore: true
      ForceSetValue:
      ForceSetBoolean:
      ForceSetDouble:
      ForceSetString:
      ForceSetRaw:
      ForceSetBooleanArray:
        overloads:
          ArrayRef<bool>:
          std::initializer_list<bool>:
            ignore: true
          ArrayRef<int>:
            ignore: true
          std::initializer_list<int>:
            ignore: true
      ForceSetDoubleArray:
        overloads:
          ArrayRef<double>:
          std::initializer_list<double>:
            ignore: true
      ForceSetStringArray:
        overloads:
          ArrayRef<std::string>:
          std::initializer_list<std::string>:
            ignore: true
      SetFlags:
      ClearFlags:
      SetPersistent:
      ClearPersistent:
      IsPersistent:
      Delete:
      CreateRpc:
      CreatePolledRpc:
        ignore: true
      CallRpc:
      AddListener:
      RemoveListener:

  NetworkTableInstance:
    shared_ptr: false
    methods:
      NetworkTableInstance:
        overloads:
          "":
            ignore: true
          NT_Inst:
            ignore: true
      GetDefault:
      Create:
      Destroy:
      GetHandle:
      GetEntry:
      GetEntries:
      GetEntryInfo:
      GetTable:
      DeleteAllEntries:
      AddEntryListener:
      RemoveEntryListener:
      WaitForEntryListenerQueue:
      AddConnectionListener:
      RemoveConnectionListener:
      WaitForConnectionListenerQueue:
      WaitForRpcCallQueue:
      SetNetworkIdentity:
      GetNetworkMode:
      StartLocal:
      StopLocal:
      StartServer:
        param_override:
          port:
            default: "NT_DEFAULT_PORT"
      StopServer:
      StartClient:
        overloads:
          "":
          char*, unsigned int:
            param_override:
              port:
                default: "NT_DEFAULT_PORT"
          ArrayRef<std::pair<StringRef, unsigned int>>:
          ArrayRef<StringRef>, unsigned int:
            param_override:
              port:
                default: "NT_DEFAULT_PORT"
      StartClientTeam:
        param_override:
          port:
            default: "NT_DEFAULT_PORT"
      StopClient:
      SetServer:
        overloads:
          char*, unsigned int:
            param_override:
              port:
                default: "NT_DEFAULT_PORT"
          ArrayRef<std::pair<StringRef, unsigned int>>:
          ArrayRef<StringRef>, unsigned int:
            param_override:
              port:
                default: "NT_DEFAULT_PORT"
      SetServerTeam:
        param_override:
          port:
            default: "NT_DEFAULT_PORT"
      StartDSClient:
        param_override:
          port:
            default: "NT_DEFAULT_PORT"
      StopDSClient:
      SetUpdateRate:
      Flush:
      GetConnections:
      IsConnected:
      SavePersistent:
      LoadPersistent:
      SaveEntries:
      LoadEntries:
      AddLogger:
      RemoveLogger:
      WaitForLoggerQueue:

  Value:
    methods:
      Value:
        overloads:
          "":
          NT_Type, uint64_t, Value::private_init:
            ignore: true
      type:
        cpp_code: |
          [](Value *t) {
            return (NetworkTableType)t->type();
          }
      value:
        cpp_code: |
          [](Value * t) -> py::object {
            auto v = t->value();
            switch (v.type) {
            case NT_BOOLEAN:
              return py::bool_(v.data.v_boolean);

            case NT_DOUBLE:
              return py::float_(v.data.v_double);

            case NT_STRING:
              return py::str(v.data.v_string.str, v.data.v_string.len);

            case NT_RAW:
              return py::bytes(v.data.v_string.str, v.data.v_string.len);

            case NT_BOOLEAN_ARRAY: {
              py::list l(v.data.arr_boolean.size);
              for (size_t i = 0; i < v.data.arr_boolean.size; i++) {
                auto b = py::bool_(v.data.arr_boolean.arr[i]);
                PyList_SET_ITEM(l.ptr(), i, b.release().ptr());
              }
              return l;
            }

            case NT_DOUBLE_ARRAY: {
              py::list l(v.data.arr_double.size);
              for (size_t i = 0; i < v.data.arr_double.size; i++) {
                auto d = py::float_(v.data.arr_double.arr[i]);
                PyList_SET_ITEM(l.ptr(), i, d.release().ptr());
              }
              return l;
            }
            
            case NT_STRING_ARRAY: {
              py::list l(v.data.arr_string.size);
              for (size_t i = 0; i < v.data.arr_string.size; i++) {
                auto s = py::str(v.data.arr_string.arr[i].str, v.data.arr_string.arr[i].len);
                PyList_SET_ITEM(l.ptr(), i, s.release().ptr());
              }
              return l;
            }

            default:
              return py::none();
            }
          }
      last_change:
      time:
      IsValid:
      IsBoolean:
      IsDouble:
      IsString:
      IsRaw:
      IsRpc:
      IsBooleanArray:
      IsDoubleArray:
      IsStringArray:
      GetBoolean:
      GetDouble:
      GetString:
      GetRaw:
      GetRpc:
      GetBooleanArray:
      GetDoubleArray:
      GetStringArray:
      MakeBoolean:
      MakeDouble:
      MakeString:
        overloads:
          wpi::Twine&, uint64_t:
          T&&, uint64_t:
            ignore: true
      MakeRaw:
        overloads:
          wpi::StringRef, uint64_t:
          T&&, uint64_t:
            ignore: true
      MakeRpc:
        overloads:
          wpi::StringRef, uint64_t:
          T&&, uint64_t:
            ignore: true
      MakeBooleanArray:
        overloads:
          ArrayRef<bool>, uint64_t:
          ArrayRef<int>, uint64_t:
            ignore: true
          std::initializer_list<bool>, uint64_t:
            ignore: true
          std::initializer_list<int>, uint64_t:
            ignore: true
      MakeDoubleArray:
        overloads:
          ArrayRef<double>, uint64_t:
          std::initializer_list<double>, uint64_t:
            ignore: true
      MakeStringArray:
        overloads:
          ArrayRef<std::string>, uint64_t:
            ignore: true
          std::vector<std::string>&&, uint64_t:
          std::initializer_list<std::string>, uint64_t:
            ignore: true